(function ($) {
    $.fn.extend({
        //新闻向上逐条滚动
        "newsMove": function (options) {
            if (!isValid(options))
                return this;
            if (options) {
                //存在参数时覆盖默认参数
                var opts = $.extend({}, defaluts, options);
            }
            else {
                //不存在参数时使用默认参数
                var opts = $.extend({}, defaluts);
            }
            return this.each(function () {
                var $this = $(this);
                var s = 0;
                var time = null,prevNext=true;

                function move() {
                    (prevNext)?s++:s--;
                    if (s > $this.find("li").length - 1) {
                        s = 0;
                    }
                    if(s<0){
                        s=$this.find("li").length - 1;
                    }
                    var move = s * -$this.height();
                    $this.find("ul").stop(true,true).animate({
                        marginTop: move
                    }, opts.timer/3);
                }
                if(opts.autoPlay){
                    time = setInterval(function () {
                        move();
                    }, opts.timer);
                }
                moseHover(opts, $this, time, move);
                $(".ytl_prev").click(function () {
                    prevNext=false;
                    move();
                    prevNext=true;
                });
                $(".ytl_next").click(function () {
                    prevNext=true;
                    move();
                });
            });
        },
        //手风琴
        "accordion": function (options) {
            if (!isValid(options))
                return this;
            if (options) {
                //存在参数时覆盖默认参数
                var opts = $.extend({}, defaluts, options);
            }
            else {
                //不存在参数时使用默认参数
                var opts = $.extend({}, defaluts);
            }
            return this.each(function () {
                var $this = $(this);
                var LtRBox = ".ytl_sfqListLtR",
                    leftBox = ".ytl_sfqListLeft",
                    rightBox = ".ytl_sfqListRight",
                    TtDBox = ".ytl_sfqListTtD",
                    topBox = ".ytl_sfqListTop",
                    downBox = ".ytl_sfqListDown";
                var LtRClass = "ytl_sfqListLtR",
                    leftClass = "ytl_sfqListLeft",
                    rightClass = "ytl_sfqListRight",
                    TtDClass = "ytl_sfqListTtD",
                    topClass = "ytl_sfqListTop",
                    downClass = "ytl_sfqListDown";
                var leftRightW = $(leftBox).width() + $(rightBox).width();
                if (opts.accordion == "LtR") {
                    $this.find(LtRBox).addClass(LtRClass).removeClass(TtDClass);
                    $this.find(leftBox).addClass(leftClass).removeClass(topClass);
                    $this.find(rightBox).addClass(rightClass).removeClass(downClass);
                    $(LtRBox).eq(0).css({"width": leftRightW});
                    var $thisLeftClick = $this.find(leftBox).width();
                    $(LtRBox).on(opts.clickHover,function () {
                        $(this).stop(true,true).animate({width: leftRightW}, opts.timer/3).siblings().stop(true,true).animate({width: $thisLeftClick}, opts.timer/3);
                    });
                }
                else {
                    $this.find(LtRBox).addClass(TtDClass).removeClass(LtRClass);
                    $this.find(leftBox).addClass(topClass).removeClass(leftClass);
                    $this.find(rightBox).addClass(downClass).removeClass(rightClass);
                    var topDownH = $(topBox).height() + $(downBox).height();
                    $this.find(TtDBox).eq(0).css({"height": topDownH});
                    var $thisTopClick = $(this).find(topBox).height();
                    $this.find(TtDBox).on(opts.clickHover,function () {
                        $(this).stop(true,true).animate({height: topDownH}, opts.timer/3).siblings().stop(true,true).animate({height: $thisTopClick}, opts.timer/3)
                    });
                }
            });
        },
        //无缝滚动
        "marquee": function (options) {
            if (!isValid(options)) return this;
            if (options) {
                var opts = $.extend({}, defaluts, options);
            }
            else {
                var opts = $.extend({}, defaluts);
            }
            return this.each(function () {
                var $this = $(this);
                var
                    lrUlBox = ".ytl_lrLbList",
                    lrLiBox = ".ytl_lrLbList li";
                var
                    tdUlBox = ".ytl_tdLbList",
                    tdLiBox = ".ytl_tdLbList li";
                var time = null;
                clearInterval(time);
                var s = 0;
                if(opts.scroll == "wfLtR"){
                    $this.addClass("ytl_conLrLB").removeClass("ytl_conTdLB");
                    $this.find(".ytl_marqueeList").addClass("ytl_lrLbList").find(".ytl_marqueeList").removeClass("ytl_tdLbList");
                    var $thisW = $(lrLiBox).outerWidth() * opts.showNum + parseInt($(lrLiBox).css("margin-right")) * (opts.showNum - 1);
                    $this.width($thisW);
                    $this.height($(lrLiBox).outerHeight());
                    $this.find(lrUlBox).width(($(lrLiBox).outerWidth() + parseInt($(lrLiBox).css("margin-right"))) * $(lrLiBox).length);
                    var moveNum = $(lrLiBox).outerWidth() + parseInt($(lrLiBox).css("margin-right"));
                    var i = 0;
                    for (i; i < opts.showNum; i++) {
                        var htm = $this.find(lrLiBox).eq(i).clone();
                        $this.find(lrLiBox).eq($this.find(lrLiBox).length - 1).after(htm);
                    }
                    $this.find(lrUlBox).width(($(lrLiBox).outerWidth() + parseInt($(lrLiBox).css("margin-right"))) * $(lrLiBox).length);

                    function wfLrScroll() {
                        (opts.direction == "left") ? s += -1 : s -= -1;
                        if (s < -($this.find(lrUlBox).width() - $this.width() - parseInt($(lrLiBox).css("margin-right")))) {
                            s = 0;
                        }
                        if (s > 0) {
                            s = -($this.find(lrUlBox).width() - $this.width() - parseInt($(lrLiBox).css("margin-right")));
                        }
                        if (opts.showNum < $this.find(lrLiBox).length) {
                            $this.find(lrUlBox).css({"left": s});
                        }
                    }
                    if(opts.autoPlay){
                        time = setInterval(function () {
                            wfLrScroll();
                        }, opts.timer);
                    }
                    moseHover(opts, $this, time, wfLrScroll);
                }
                else{
                    $this.addClass("ytl_conTdLB").removeClass("ytl_conLrLB");
                    $this.find(".ytl_marqueeList").addClass("ytl_tdLbList").find(".ytl_marqueeList").removeClass("ytl_lrLbList");
                    var thisH = $(tdLiBox).outerHeight() * opts.showNum + parseInt($(tdLiBox).css("margin-bottom")) * (opts.showNum - 1);
                    $this.width($this.find(tdLiBox).outerWidth());
                    $this.height(thisH);
                    var moveNum = $(lrLiBox).outerHeight() + parseInt($(lrLiBox).css("margin-bottom"));
                    var i = 0;
                    for (i; i < opts.showNum; i++) {
                        var htm = $this.find(tdLiBox).eq(i).clone();
                        $this.find(tdLiBox).eq($this.find(tdLiBox).length - 1).after(htm);
                    }

                    function wfTdScroll() {
                        (opts.direction == "top") ? s += -1 : s -= -1;
                        if (s < -($this.find(tdUlBox).height() - $this.height())) {
                            s = 0;
                        }
                        if (s > 0) {
                            s = -($this.find(tdUlBox).height() - $this.height() - parseInt($(tdLiBox).css("margin-bottom")));
                        }
                        if (opts.showNum < $this.find(tdLiBox).length) {
                            $this.find(tdUlBox).css({"top": s});
                        }
                    }
                    if(opts.autoPlay){
                        time = setInterval(function () {
                            wfTdScroll();
                        }, opts.timer);
                    }
                    moseHover(opts, $this, time, wfTdScroll);
                }
                $(this).parent().width($(this).outerWidth());
            });
        },
        // tab切换同时含有轮播图
        "multipleRolling": function (options) {
            if (!isValid(options))
                return this;
            if (options) {
                //存在参数时覆盖默认参数
                var opts = $.extend({}, defaluts, options);
            }
            else {
                //不存在参数时使用默认参数
                var opts = $.extend({}, defaluts);
            }
            return this.each(function () {
                var $this=$(this);
                var time=null,ulIndex=0,s=0;
                var divBox=".ytl_listBox",
                    ulBox=".ytl_listBox ul",
                    ulLiBox=".ytl_listBox ul li",
                    dlBox=".ytl_title .ytl_left",
                    linkBox=".ytl_title .ytl_right",
                    olBox=".ytl_pointLists",
                    olLiBox=".ytl_pointLists li";
                leftBox=".ytl_listLeft";
                rightBox=".ytl_listRight";
                initialize(0);
                if(!opts.prevNext) $this.find(".ytl_prevNext").remove();
                var liW=$this.find(ulLiBox).outerWidth(true);
                if(opts.wordList){
                    $this.find(leftBox).width(liW*opts.showNum-parseInt($this.find(ulLiBox).css("margin-right")));
                    $this.width((liW*opts.showNum-parseInt($this.find(ulLiBox).css("margin-right")))+$this.find(leftBox).outerWidth(true));
                } else{
                    $this.width(liW*opts.showNum-parseInt($this.find(ulLiBox).css("margin-right")));
                }
                (opts.group)?opts.moveNum=opts.showNum:opts.moveNum=1;
                isCreatePoint(opts, $this);
                $this.find(dlBox).find("dd").click(function () {
                    var index=$(this).index();
                    s=0;
                    $this.find(ulBox).css({"margin-left":0});
                    $(this).addClass("on").siblings().removeClass("on");
                    var findUlBox=$this.find(ulBox).eq(index);
                    findUlBox.parent().find(olLiBox).removeClass("on");
                    findUlBox.parent().find(olLiBox).eq(0).addClass("on");
                    initialize(index);
                });
                function animationNext() {
                    s++;
                    animationCon();
                }
                function animationPrev() {
                    s--;
                    animationCon();
                }
                if(opts.autoPlay){
                    time=setInterval(function () {
                        animationNext();
                    },opts.timer);
                }
                moseHover(opts, $this, time, animationNext);
                $this.find(".ytl_next").click(function () {
                    animationNext();
                });
                $this.find(".ytl_prev").click(function () {
                    animationPrev();
                });
                $this.find(olLiBox).click(function () {
                    var findUlBox=$this.find(ulBox).eq(ulIndex);
                    var index=$(this).index();
                    var liW=findUlBox.find("li").outerWidth(true);
                    $(this).addClass("on").siblings().removeClass("on");
                    findUlBox.stop(true,true).animate({"margin-left":-liW*opts.showNum*index},opts.timer/3);
                });
                function initialize(num) {
                    var findUlBox=$this.find(ulBox).eq(num);
                    var len=findUlBox.find("li").length;
                    $this.find(linkBox).hide();
                    $this.find(linkBox).eq(num).show();
                    $this.find(divBox).removeClass("on");
                    $this.find(divBox).eq(num).addClass("on");
                    var divW = "";
                    if(opts.divLevelNum>1){
                        divW = Math.ceil(len/opts.divLevelNum) * (findUlBox.find("li").outerWidth(true));
                        findUlBox.find("li").css({"position":"absolute"});
                        findUlBox.find("li").each(function (index) {
                            var leftNum=parseInt(index/opts.divLevelNum)*$(this).outerWidth(true);
                            var topNum=parseInt(index%opts.divLevelNum)*($(this).outerHeight(true));
                            $(this).css({"top":topNum,"left":leftNum});
                        });
                        findUlBox.height((findUlBox.find("li").outerHeight(true)+opts.marginNum)*opts.divLevelNum);
                    }else {
                        divW = len * (findUlBox.find("li").outerWidth(true));
                    }
                    findUlBox.width(divW);
                    if((!opts.group&&opts.showNum>1)||len/opts.showNum<=1||len/opts.showNum/opts.divLevelNum<=1) {
                        findUlBox.parent().find(".ytl_pointLists").remove();
                    }
                }
                function animationCon() {
                    var num=$this.find(dlBox).find(".on").index();
                    var findUlBox=$this.find(ulBox).eq(num);
                    var len=findUlBox.find("li").length;
                    var liW=findUlBox.find("li").outerWidth(true);
                    if(opts.moveNum<len){
                        var maxNum="";
                        (opts.group)?((opts.divLevelNum>1)?maxNum=Math.ceil(len/opts.moveNum/opts.divLevelNum)-1:maxNum=Math.ceil(len/opts.moveNum)-1):((opts.divLevelNum>1)?maxNum=findUlBox.width()/liW-opts.moveNum-1:maxNum=len-opts.showNum);
                        if(s>maxNum){
                            s=0;
                        }
                        if(s<0){
                            s=maxNum;
                        }
                        findUlBox.parent().find(olLiBox).removeClass("on");
                        findUlBox.parent().find(olLiBox).eq(s).addClass("on");
                        findUlBox.stop(true,true).animate({"margin-left":-liW*opts.moveNum*s},opts.timer/3);
                    }
                }
            });
        },
        //下拉选择
        "dropDown": function (options) {
            if (!isValid(options))
                return this;
            if (options) {
                //存在参数时覆盖默认参数
                var opts = $.extend({}, defaluts, options);
            }
            else {
                //不存在参数时使用默认参数
                var opts = $.extend({}, defaluts);
            }
            return this.each(function () {
                var $this=$(this);
                var chooseResult=".ytl_chooseResult",
                    ulBox=".ytl_chooseList",
                    ulLiBox=".ytl_chooseList li",
                    sanjia1="ytl_dropDownBg1",
                    sanjia2="ytl_dropDownBg2";
                $this.find(chooseResult).addClass(sanjia1);
                $this.find(chooseResult).click(function () {
                    $this.find(ulBox).slideToggle(function () {
                        $this.find(chooseResult).removeClass(sanjia1).removeClass(sanjia2);
                        if($this.find(ulBox).css("display")=="none"){
                            $this.find(chooseResult).addClass(sanjia1);
                        }
                        else {
                            $this.find(chooseResult).addClass(sanjia2);
                        }
                    });
                });
                $this.find(ulLiBox).click(function () {
                    $(this).addClass("on").siblings().removeClass("on");
                    $this.find(chooseResult).text($(this).text());
                    $this.find(ulBox).slideUp(function () {
                        $this.find(chooseResult).addClass(sanjia1).removeClass(sanjia2);
                    });
                });
            });
        },
        //中间大图显示
        "highlight": function(options) {
            if (!isValid(options)) return this;
            if (options) {
                var opts = $.extend({}, defaluts, options)
            } else {
                var opts = $.extend({}, defaluts)
            }
            return this.each(function() {
                var $this = $(this);
                var liBox = ".ytl_list li";
                var liActiveBox = ".ytl_list .ytl_active";
                var listBox = ".ytl_list";
                var len=$this.find(liBox).length;
                for (var i = 0; i < 2*len-1; i++) {
                    var htm = $this.find(liBox).eq(i).clone();
                    $this.find(liBox).eq($this.find(liBox).length - 1).after(htm)
                }
                var beforeLiH = $this.find(liBox).outerHeight(true);
                var beforeLiW = $this.find(liBox).outerWidth(true);
                $this.find(liBox).eq(Math.floor(opts.showNum / 2)).addClass("ytl_active").siblings().removeClass("ytl_active");
                var afterLiH = $this.find(liActiveBox).outerHeight(true);
                var afterLiW = $this.find(liActiveBox).outerWidth(true);
                $this.css({
                    "padding-top": (afterLiH - beforeLiH) / 2
                });
                var $thisLiW = 0,
                    $thisW = 0,
                    ulL = -parseInt($this.find(liBox).css("margin-left"));
                $this.find(liBox).each(function(index) {
                    if (index < opts.showNum) {
                        $thisW += $(this).outerWidth(true)
                    }
                    $thisLiW += $(this).outerWidth(true)
                });
                $this.width($thisW - parseInt($this.find(liBox).css("margin-left")) * 2);
                $this.height(afterLiH - (afterLiH - beforeLiH) / 2);
                $this.find(listBox).width($thisLiW);
                $this.find(listBox).css({
                    "margin-left": ulL
                });
                var s = Math.floor(opts.showNum / 2), time = null;
                function animation() {
                    s++;
                    move();
                }
                if(opts.autoPlay){
                    time = setInterval(function() {
                        animation()
                    }, opts.timer);
                    moseHover(opts, $this, time, animation);
                }
                $this.find(liBox).eq(len+Math.floor(opts.showNum / 2)).addClass("ytl_active").siblings().removeClass("ytl_active");
                $this.find(".ytl_active a").attr({"href":$this.find(".ytl_active").attr("data-href")});
                $this.find(listBox).css({"margin-left": -parseInt($this.find(liBox).css("margin-left"))-len* beforeLiW});
                $this.find(liBox).click(function () {
                    var beforeindex=$this.find(".ytl_active").index();
                    s=$(this).index();
                    if(beforeindex!==s){
                        $this.find("li a").attr({"href":"javascript:;"});
                    }
                    move();
                });
                function move() {
                    $this.find(liBox).addClass("tstAll");
                    $this.find(liBox).eq(s).addClass("ytl_active").siblings().removeClass("ytl_active");
                    var move =  -parseInt($this.find(liBox).css("margin-left")) -(s-Math.floor(opts.showNum / 2))* beforeLiW;
                    if (s >=2*len-1+Math.floor(opts.showNum / 2)) {
                        $this.find(listBox).stop(true,true).animate({
                            "margin-left": move
                        }, opts.timer/3,function () {
                            $this.find(liBox).removeClass("tstAll");
                            $this.find(liBox).eq(len+Math.floor(opts.showNum / 2)-1).addClass("ytl_active").siblings().removeClass("ytl_active");
                            $this.find(listBox).stop(true,true).animate({
                                "margin-left": -parseInt($this.find(liBox).css("margin-left"))-(len-1)* beforeLiW
                            }, 0);
                            s = Math.floor(opts.showNum / 2);
                            $this.find(".ytl_active a").attr({"href":$this.find(".ytl_active").attr("data-href")});
                        });
                    }
                    else if (s <=Math.floor(opts.showNum / 2)) {
                        $this.find(listBox).stop(true,true).animate({
                            "margin-left": move
                        }, opts.timer/3,function () {
                            $this.find(liBox).removeClass("tstAll");
                            $this.find(liBox).eq(len+Math.floor(opts.showNum / 2)).addClass("ytl_active").siblings().removeClass("ytl_active");
                            $this.find(listBox).stop(true,true).animate({
                                "margin-left": -parseInt($this.find(liBox).css("margin-left"))-len* beforeLiW
                            }, 0);
                            s = Math.floor(opts.showNum / 2);
                            $this.find(".ytl_active a").attr({"href":$this.find(".ytl_active").attr("data-href")});
                        });
                    }
                    else {
                        $this.find(listBox).stop(true,true).animate({
                            "margin-left": move
                        },  opts.timer/3,function () {
                            $this.find(".ytl_active a").attr({"href":$this.find(".ytl_active").attr("data-href")});
                        });
                    }
                }
            })
        },
        //时间轴
        "dateLine": function (options) {
            if (!isValid(options))
                return this;
            if (options) {
                //存在参数时覆盖默认参数
                var opts = $.extend({}, defaluts, options);
            }
            else {
                //不存在参数时使用默认参数
                var opts = $.extend({}, defaluts);
            }
            return this.each(function () {
                var $this=$(this);
                var ulBox = $this.find("ul");
                var ulLiBox = ulBox.find("li");
                var olLiBox = $this.find("ol li");
                var prevBox = $this.find(".ytl_prev");
                var nextBox = $this.find(".ytl_next");
                olLiBox.eq(0).show().siblings().hide();
                ulBox.width(ulLiBox.outerWidth(true) * ulLiBox.length);
                $this.width(ulLiBox.outerWidth(true)*(opts.showNum+1)-ulLiBox.width());
                ulLiBox.on("click", function () {
                    var num = $(this).index();
                    $(this).addClass("on").siblings().removeClass("on");
                    olLiBox.eq(num).show().siblings().hide();
                    if(num>=Math.floor(opts.showNum/2)){
                        var leftVal="";
                        if(-(num-Math.floor(opts.showNum/2))*ulLiBox.outerWidth(true)<-(ulLiBox.length-opts.showNum)*ulLiBox.outerWidth(true)){
                            leftVal=-(ulLiBox.length-opts.showNum)*ulLiBox.outerWidth(true);
                        }
                        else {
                            leftVal=-(num-Math.floor(opts.showNum/2))*ulLiBox.outerWidth(true);
                        }
                        ulBox.stop(true,true).animate({"left": leftVal},opts.timer/3);
                    }
                });
                var num = 1;

                function prevNextClick(prevNext) {
                    ulLiBox.each(function () {
                        if ($(this).hasClass("on")) {
                            num = $(this).index();
                        }
                    });
                    (prevNext)?num--:num++;
                    if(num<0){
                        num=0;
                        ulBox.stop(true,true).animate({"left": 0},opts.timer/3);
                    }
                    if(num>=Math.floor(opts.showNum/2)){
                        var leftVal="";
                        if(-(num-Math.floor(opts.showNum/2))*ulLiBox.outerWidth(true)<-(ulLiBox.length-opts.showNum)*ulLiBox.outerWidth(true)){
                            leftVal=-(ulLiBox.length-opts.showNum)*ulLiBox.outerWidth(true);
                        }
                        else {
                            leftVal=-(num-Math.floor(opts.showNum/2))*ulLiBox.outerWidth(true);
                        }
                        ulBox.stop(true,true).animate({"left": leftVal},opts.timer/3);
                    }
                    ulLiBox.eq(num).addClass("on").siblings().removeClass("on");
                    olLiBox.eq(num).show().siblings().hide();
                }

                prevBox.on("click", function () {
                    prevNextClick(true);
                });
                nextBox.on("click", function () {
                    prevNextClick(false);
                });
            });
        },
        //弹出层
        "layout": function (options) {
            if (!isValid(options))
                return this;
            if (options) {
                //存在参数时覆盖默认参数
                var opts = $.extend({}, defaluts, options);
            }
            else {
                //不存在参数时使用默认参数
                var opts = $.extend({}, defaluts);
            }
            return this.each(function () {
                var $this=$(this);
                var conBox=".ytl_layoutCon";
                var conBgBox=".ytl_layoutCon,.ytl_layoutBg";
                var btnBox=".ytl_layoutBtn";
                var closeBox=".ytl_layoutClose";
                var left=($(window).width()-$this.find(conBox).width())/2;
                var top=($(window).height()-$this.find(conBox).height())/2;
                $this.find(conBox).css({"left":left,"top":top});
                $this.find(closeBox).css({"right":left,"top":top});
                $this.find(btnBox).click(function () {
                    if($this.find(conBgBox).hide()){
                        $this.find(conBgBox).show();
                    }
                    else {
                        $this.find(conBgBox).hide();
                    }
                });
                $this.find(closeBox).click(function () {
                    $this.find(conBgBox).hide();
                });
            });
        },
        // 图片等比缩放
        "imgScale": function (options) {
            if (!isValid(options))
                return this;
            if (options) {
                //存在参数时覆盖默认参数
                var opts = $.extend({}, defaluts, options);
            }
            else {
                //不存在参数时使用默认参数
                var opts = $.extend({}, defaluts);
            }
            return this.each(function () {
                var $this=$(this),time;
                var imgBox=$this.find(".img"),
                    imgTag=$this.find(".img img");
                time=setInterval(function () {
                    for (var i = 0; i < imgTag.length; i++) {
                        var imginnerWidth = imgTag[i].naturalWidth;
                        var imginnerHeight = imgTag[i].naturalHeight;
                        var boxWidth = imgBox.width();
                        var boxHeight = imgBox.height();
                        var imgScale=imginnerWidth / imginnerHeight;/*图片比例*/
                        var boxScale=boxWidth / boxHeight;/*盒子比例*/
                        var imgWidth = imgScale * boxHeight;
                        var imgHeight = boxWidth/imgScale;
                        if(opts.scale){
                            if(imgScale>boxScale){large();}
                            if(imgScale==boxScale){equal();}
                            if(imgScale<boxScale){small();}
                        }else {
                            if(imgScale>boxScale){small();}
                            if(imgScale==boxScale){equal();}
                            if(imgScale<boxScale){large();}
                        }
                    }
                    /*比例：大、等、小*/
                    function large() {
                        imgTag.eq(i).css({"height":"100%","width":imgScale*boxHeight+"px","margin-left":-(imgScale*boxHeight-boxWidth)/2+"px"});
                    }
                    function equal() {
                        imgTag.eq(i).css({"height":"100%","height":"100%"});
                    }
                    function small() {
                        imgTag.eq(i).css({"width":"100%","height":boxWidth/imgScale+"px","margin-top":-(boxWidth/imgScale-boxHeight)/2+"px"});
                    }
                },10);
            });
        },
        //上下居中对齐显示
        "alignTBC": function (options) {
            if (!isValid(options))
                return this;
            if (options) {
                //存在参数时覆盖默认参数
                var opts = $.extend({}, defaluts, options);
            }
            else {
                //不存在参数时使用默认参数
                var opts = $.extend({}, defaluts);
            }
            return this.each(function () {
                var $this=$(this),timechange;
                var ulBox=$this.find("ul"),
                    ulLiBox=$this.find("ul li"),
                    ulLiW=ulLiBox.outerWidth(true),
                    ulLiShow=Math.ceil($this.width()/ulLiW),

                    olBox=$this.find("ol"),
                    olLiBox=$this.find("ol li"),
                    oldLen=olLiBox.length,
                    olLiShow=ulLiShow-1,
                    olmr=parseInt(olLiBox.css("margin-right")),
                    olLiW=($this.width()-(ulLiShow-2)*olmr)/(ulLiShow-1);

                var s=0,time,newLen=0;
                olLiBox.outerWidth(olLiW);
                for(var i=0;i<oldLen;i++){
                    ulBox.append(ulLiBox.eq(i).clone());
                    olBox.append(olLiBox.eq(i).clone());
                    newLen=oldLen+i+1;
                }
                ulLiBox=$this.find("ul li");
                olBox.width(newLen*olLiBox.outerWidth(true));
                var defaultmr=-(olLiW- ($this.width()-(ulLiShow-2)*olLiBox.outerWidth(true)-olmr)/2);
                olBox.css({"margin-left": defaultmr});
                ulBox.width(newLen*ulLiBox.outerWidth(true));
                ulLiBox.eq(Math.floor(ulLiShow/2)).addClass("on");
                function move(next) {
                    (next)?s++:s--;
                    moveCon();
                }
                function autoplay() {
                    if(opts.autoPlay){
                        time=setInterval(function () {
                            move(true);
                        },opts.timer);
                    }
                }
                autoplay();
                ulLiBox.click(function () {
                    s=$(this).index()-Math.floor(ulLiShow/2);
                    moveCon();
                });
                moseHove(olLiBox);
                moseHove(ulLiBox);
                moseHove($this.find(".ytl_next,.ytl_prev"));
                function moseHove(box){
                    box.hover(function () {
                        clearInterval(time);
                    },function () {
                        autoplay();
                    })
                }
                $this.find(".ytl_prev").click(function () {
                    move(false);
                });
                $this.find(".ytl_next").click(function () {
                    move(true);
                })
                function moveCon() {
                    var olLiow=olLiW+olmr;
                    ulLiBox.eq(Math.floor(ulLiShow/2)+s).addClass("on").siblings().removeClass("on");
                    if(s>oldLen){
                        s=1;
                        ulLiBox.eq(Math.ceil(ulLiShow/2)).addClass("on");
                        olBox.css({"margin-left":defaultmr}).stop(true,true).animate({"margin-left":defaultmr-s*olLiow},opts.timer/3);
                        ulBox.css({"margin-left":0}).stop(true,true).animate({"margin-left":-s*ulLiW},opts.timer/3);
                    }
                    else if(s<0){
                        s=oldLen-1;
                        ulLiBox.eq(s+Math.floor(ulLiShow/2)).addClass("on");
                        olBox.css({"margin-left":defaultmr-(s+1)*olLiow}).stop(true,true).animate({"margin-left":defaultmr-s*olLiow},opts.timer/3);
                        ulBox.css({"margin-left":-(s+1)*ulLiW}).stop(true,true).animate({"margin-left":-s*ulLiW},opts.timer/3);
                    }
                    else {
                        olBox.stop(true,true).animate({"margin-left":defaultmr-s*olLiow},opts.timer/3);
                        ulBox.stop(true,true).animate({"margin-left":-s*ulLiW},opts.timer/3);
                    }
                }
            });
        },
        //banner
        "banner": function (options) {
            if (!isValid) {
                return this;
            }
            if (options) {
                var opts = $.extend({}, defaluts, options);
            } else {
                var opts = $.extend({}, defaluts);
            }
            return this.each(function () {
                var $this = $(this);
                isCreatePoint(opts, $this);
                isCreateImg(opts,$this);
                var dayList = "",
                    imgBox=$this.find(".ytl_picCarousel"),
                    pointBox=$this.find(".ytl_pointLists"),
                    smallImgBox=$this.find(".ytl_smallImgList"),
                    titBox=$this.find(".ytl_tit"),
                    hoverBox=opts.hover_box;
                pointBox.find("li").eq(0).addClass("on");
                imgBox.find("li").addClass("img").eq(0).css({"opacity": "1"}).siblings().css({"opacity": "0"});
                titBox.find("li").eq(0).css({"opacity": "1"}).siblings().css({"opacity": "0"});
                var s = 0;
                var time = null;
                var Lenth = imgBox.find("li").length;
                /*function mytime() {
                    /!*var Lenth = imgBox.find("li").length;*!/
                    /!*if (s >= Lenth) {
                        s = 0;
                        smallImgBox.stop(true,true).animate({"margin-left":0},opts.timer/3);
                    }
                    if(s<0){
                        s=Lenth-1;
                    }*!/
                    f();
                }*/
                time = setInterval(function () {
                    s++;
                    f();
                }, opts.timer);
                $(hoverBox).hover(function () {
                    clearInterval(time);
                }, function () {
                    time = setInterval(function () {
                        s++;
                        f();
                    }, opts.timer);
                });
                pointBox.find("li").click(function () {
                    var num=$(this).index();
                    s=num;
                    f();
                });
                smallImgBox.find("li").click(function () {
                    var num=$(this).index();
                    s=num;
                    f();
                });
                $this.find(".ytl_next").click(function () {
                    s++;
                    f();
                });
                $this.find(".ytl_prev").click(function () {
                    s--;
                    f();
                });
                function f() {
                    var beforeOn=pointBox.find(".on").index();
                    if(s!=beforeOn){
                        var _ml=0;
                        if(s>=opts.showNum-1) _ml=-(s-opts.showNum+2)*smallImgBox.find("li").outerWidth(true);
                        if(s==Lenth-1||s<0) _ml=-(Lenth-opts.showNum)*smallImgBox.find("li").outerWidth(true);
                        if(s==0||s >= Lenth) _ml=0;
                        if(s >= Lenth) s = 0;
                        if(s<0) s=Lenth-1;
                        titBox.find("li").stop(true,true).animate({"opacity": "0"}, opts.timer/3).eq(s).stop(true,true).animate({"opacity": "1"}, opts.timer/3);
                        imgBox.find("li").stop(true,true).animate({"opacity": "0"}, opts.timer/3).eq(s).stop(true,true).animate({"opacity": "1"}, opts.timer/3);
                        pointBox.find("li").eq(s).addClass("on").siblings().removeClass("on");
                        smallImgBox.find("li").eq(s).addClass("on").siblings().removeClass("on");
                        smallImgBox.stop(true,true).animate({"margin-left":_ml},opts.timer/3);
                    }
                }
            })
        },
        //百合窗
        "lilyWindow": function (options) {
            if (!isValid(options))
                return this;
            if (options) {
                //存在参数时覆盖默认参数
                var opts = $.extend({}, defaluts, options);
            }
            else {
                //不存在参数时使用默认参数
                var opts = $.extend({}, defaluts);
            }
            return this.each(function () {
                var $this=$(this);
                isCreatePoint(opts, $this);
                isCreateImg(opts,$this);
                //分割图片
                //基本参数
                var cNum=0,s=0,flag=flag1=true;
                    ulW=$this.find("ul").width(),
                    ulH=$this.find("ul").height(),
                    liBox=$this.find("ul li"),
                    titBox=$this.find(".ytl_tit li"),
                    pointBox=$this.find(".ytl_pointLists li"),
                    imgBox=$this.find(".ytl_smallImgLists li"),
                    prevBox=$this.find(".ytl_prev"),
                    nextBox=$this.find(".ytl_next"),
                    lNum=Math.ceil(ulW/opts.createSize),
                    vNum=Math.ceil(ulH/opts.createSize),
                    len=liBox.length,
                    createW=ulW/lNum,
                    createH=ulH/vNum,
                    createImg=$this.find(".ytl_createImg");
                createImg.css({"width":ulW,"height":ulH});
                liBox.css({"display":"none"});
                liBox.hide().eq(0).show();
                titBox.eq(0).animate({"bottom":titBox.height()},opts.timer/3);

                //分割函数c，type参数：1横条，2竖条，3方格；src是图片路径
                function c(kind,src) {
                    var createNum="";
                    flag=!flag;
                    type=parseInt(Math.random()*3+1);
                    (type==1)?cNum=vNum:(type==2)?cNum=lNum:cNum=lNum*vNum;
                    for(var i=0;i<cNum;i++){
                        createNum+="<div></div>";
                    }
                    createImg.empty().append(createNum);
                    var divL=createImg.find("div").length,
                        _random=parseInt(Math.random()*2+1),
                        _random1=parseInt(Math.random()*4+1);
                    createImg.find("div").each(function (index) {
                        var _this=$(this);
                        _this.css({
                            "background-image":"url("+src+")",
                            "background-size": ulW+"px "+ulH+"px",
                            "background-position":
                                (type==1)?"top -"+createH*index+"px left":
                                    (type==2)?"top left -"+createW*index+"px":
                                        "top -"+parseInt(index/lNum)*createH+"px left -"+parseInt(index%lNum)*createW+"px",
                        });
                        var _t={"top":parseInt(index/lNum)*createH}, _t1={"top":createH*index}, _t2={"top":0},
                            _b={"bottom":createH*(divL-index-1)},_b1={"bottom":0},_b2={"bottom":parseInt((divL-index-1)/lNum)*createH},
                            _r={"right":0}, _r1={"right":createW*(divL-index-1)}, _r2={"right": parseInt((divL - index - 1) % lNum) * createW},
                            _w={"width":"100%"}, _w1={"width":createW}, _w2={"width":0},
                            _h={"height":createH}, _h1={"height":"100%"}, _h2={"height":0},
                            _o={"opacity":1}, _o1={"opacity":0},
                            _bgp={"background-position":"top -"+createH*index+"px left"}, _bgp1={"background-position":"top -"+createH*index+"px right"}, _bgp2={"background-position":"left -"+createW*index+"px top"}, _bgp3={"background-position":"left -"+createW*index+"px bottom"},
                            _l={"left":parseInt(index%lNum)*createW}, _l1={"left":0}, _l2={"left":createW*index};

                        var _t_l=$.extend({},_t,_l);
                        switch (kind) {
                            case 1://注：kind=1，type=1上下横条；kind=1，type=2左右竖条；kind=1，type=3左右方格
                                (type==3)?an4():an1();
                                break;
                            case 2://注：kind=2，type=1交叉横条；kind=2，type=2交叉竖条；kind=2，type=3上下方格
                                (type==3)?an4():an2();
                                break;
                            case 3://注：kind=3，type=1层次横条；kind=3，type=2层次竖条；kind=3，type=3四角方格
                                if(type==1) an3_1();
                                if(type==2) an3_2();
                                if(type==3){
                                    if(_random1==1) _this.css($.extend({},_b2,_l));
                                    if(_random1==2) _this.css($.extend({},_t,_l));
                                    if(_random1==3) _this.css($.extend({},_t,_r2));
                                    if(_random1==4) _this.css($.extend({},_b2,_r2));
                                    _this.animate({
                                        "width":createW,
                                        "height": createH,
                                        "opacity": 1
                                    },opts.timer/6);
                                }
                                break;
                        }
                        function an1() {
                            var wl_ht=t_l=b_r=ho_wo={};
                            if(type==1){
                                wl_ht=$.extend({},_w,_l1), t_l=_t1, b_r=_b, ho_wo=$.extend({},_h,_o);
                            }
                            if(type==2){
                                wl_ht=$.extend({},_h1,_t2), t_l=_l2, b_r=_r1, ho_wo=$.extend({},_w1,_o);
                            }
                            _this.css(wl_ht);
                            (flag)?_this.css(t_l):_this.css(b_r);
                            _this.animate(ho_wo,opts.timer/3);
                        }
                        function an2() {
                            var ht_wl=l_t=r_b=wo_ho={};
                            if(type==1){
                                ht_wl=$.extend({},_h,_t1), l_t=_l1, r_b=_r, wo_ho=$.extend({},_w,_o);
                            }
                            if(type==2){
                                ht_wl=$.extend({},_w1,_l2), l_t=_t2, r_b=_b1, wo_ho=$.extend({},_h1,_o);
                            }
                            _this.css(ht_wl);
                            (index%2==1)?_this.css(l_t):_this.css(r_b);
                            _this.animate(wo_ho,opts.timer/3);
                        }
                        function an3_1() {
                            var _w=(flag)?index*createH:(divL-1-index)*createH;
                            var lb_rb={};
                            if(_random==1) lb_rb=$.extend({},_l1,_bgp);
                            if(_random==2) lb_rb=$.extend({},_r,_bgp1);
                            _this.css($.extend({},_w,_h,_t1));
                            _this.css(lb_rb);
                            _this.animate({
                                "width": ulW+_w,
                                "opacity": 1,
                            },opts.timer/3);
                        }
                        function an3_2() {
                            var _h=(flag)?index*createW:(divL-1-index)*createW;
                            var tb_bb={};
                            if(_random==1) tb_bb=$.extend({},_t2,_bgp2);
                            if(_random==2) tb_bb=$.extend({},_b1,_bgp3);
                            _this.css($.extend({},_w1,_h2,_l2));
                            _this.css(tb_bb);
                            _this.animate({
                                "height": ulH+_h,
                                "opacity": 1,
                            },opts.timer/3);
                        }
                        function an4() {
                            var h_w=tl=tr_lb=wo_ho=reset={};
                            tl=_t_l;
                            if(kind==1) {
                                h_w = _h;
                                tr_lb = $.extend({},_t,_r2);
                                wo_ho = $.extend({},_w1,_o);
                                reset = $.extend({},_w2,_o1);
                            }
                            if(kind==2) {
                                h_w=_w1;
                                tr_lb=$.extend({},_b2,_l);
                                wo_ho=$.extend({},_h,_o);
                                reset=$.extend({},_h2,_o1);
                            }
                            _this.css(h_w);
                            if(kind==1)(!flag)? _this.css(tl):_this.css(tr_lb);
                            if(kind==2)(flag)? _this.css(tl):_this.css(tr_lb);
                            if(index%2==1){
                                _this.animate(wo_ho,opts.timer/6);
                            }else {
                                _this.animate(reset,opts.timer/6,function () {
                                    _this.animate(wo_ho,opts.timer/6);
                                });
                            }
                        }
                    });
                    titBox.stop(true,true).animate({"bottom":0},opts.timer/6);
                    titBox.eq(s).animate({"bottom":titBox.height()},opts.timer/6);
                    pointBox.removeClass("on").eq(s).addClass("on");
                    imgBox.removeClass("on").eq(s).addClass("on");
                }
                function a() {
                    var moveNum=0,smallShow=Math.ceil($this.outerWidth(true)/imgBox.outerWidth(true))-1;
                    if(s>smallShow-1){
                        moveNum=s-(smallShow-1);
                    }
                    else {
                        moveNum=0;
                        if(s<0){
                            s=len-1;
                            moveNum=len-1-smallShow;
                        }
                    }
                    if(s==len-1){
                        moveNum=len-1-smallShow;
                    }
                    if(s>len-1){
                        s=0;
                        moveNum=0;
                    }
                    imgBox.parent().stop(true,true).animate({"margin-left":-moveNum*imgBox.outerWidth(true)},opts.timer/6);
                    var random=parseInt(Math.random()*opts.kind+1),
                        imgSrc=liBox.eq(s).find("img").attr("src");
                    c(random,imgSrc);
                    /*//产生不重复随机排序数组
                    function randomIndex(n){
                        var i, j, tmp, a = new Array(n);
                        a[0] = 0;
                        for(i = n-1; i > 0; i--) {
                            j = parseInt(Math.random() * n+1);
                            tmp = a[i] || i;
                            a[i] = a[j] || j;
                            a[j] = tmp;
                        };
                        return a;
                    }
                    var divL=createImg.find("div").length,
                        divRandom=randomIndex(divL);*/
                }

                if(opts.autoplay){
                    var time=setInterval(function () {
                        s++;
                        liBox.hide().eq(s-1).show();
                        a();
                    },opts.timer);
                }

                nextBox.click(function () {
                    s++;
                    liBox.hide().eq(s-1).show();
                    a();
                });
                prevBox.click(function () {
                    s--;
                    liBox.hide().eq(s+1).show();
                    a();
                });
                pointBox.click(function () {
                    var beforeIndex=imgBox.parent().find(".on").index();
                    s=$(this).index();
                    liBox.hide().eq(beforeIndex).show();
                    if(s!=beforeIndex){
                        a();
                    }
                });
                imgBox.click(function () {
                    var beforeIndex=imgBox.parent().find(".on").index();
                    s=$(this).index();
                    liBox.hide().eq(beforeIndex).show();
                    if(s!=beforeIndex){
                        a();
                    }
                });
                if (opts.moseHover == true) {
                    $this.find(opts.hover_box).hover(function () {
                        clearInterval(time);
                    }, function () {
                        if(opts.autoPlay){
                            time = setInterval(function () {
                                s=imgBox.parent().find(".on").index()+1;
                                liBox.hide().eq(s-1).show();
                                a();
                            }, opts.timer);
                        }
                    });
                }
            });
        },
        // 模板
        /*"dropDown": function (options) {
            if (!isValid(options))
                return this;
            if (options) {
                //存在参数时覆盖默认参数
                var opts = $.extend({}, defaluts, options);
            }
            else {
                //不存在参数时使用默认参数
                var opts = $.extend({}, defaluts);
            }
            return this.each(function () {
                var $this=$(this);
            });
        }*/
    });

    //默认参数
    var defaluts = {
        autoPlay: true,
        group:false,
        moseHover: true,        // 鼠标移入是否停止动画，默认停止true
        hover_box:"li,.ytl_next,.ytl_prev",           //默认移入li和上下切换按钮停止动画
        timer: 20,
        accordion: "FtR",       //手风琴排列方向默认FtR左往右
        clickHover: "hover",    //判断事件为点击还是移入移出，默认为移入移出
        scroll: "lrScroll",     //滚动方式（lrScroll，wfScroll），默认lrScroll左右滚动
        showNum: 4,                 //轮播滚动显示数量
        direction: "left",      //滚动方向，默认left向左
        divLevelNum:5,
        moveNum: 1,                 //轮播滚动移动数量
        marginNum:0,
    };

    //私有方法，检测参数是否合法
    function isValid(options) {
        return !options || (options && typeof options === "object") ? true : false;
    }
    /*是否移入停止*/
    function moseHover(opts, $this, time, fn) {
        //鼠标移入是否停止动画
        if (opts.moseHover == true) {
            $this.find(opts.hover_box).hover(function () {
                clearInterval(time);
            }, function () {
                if(opts.autoPlay){
                    time = setInterval(function () {
                        fn();
                    }, opts.timer);
                }
            });
        }
    }
    /*创建点点*/
    function isCreatePoint(opts, $this) {
        $this.find("ul").each(function (index) {
            var pointList = "",
                ulBox=$this.find("ul").eq(index),
                olBox=ulBox.parent().find(".ytl_pointLists"),
                len=ulBox.find("li").length;
            if(opts.group){
                for(var i=0;i<len/opts.moveNum/opts.divLevelNum;i++){
                    pointList += "<li></li>";
                }
            }else {
                for(var i=0;i<len;i++){
                    pointList += "<li></li>";
                }
            }
            olBox.html(pointList);
            olBox.find("li").eq(0).addClass("on");
            olBox.width(olBox.find("li").outerWidth(true)*olBox.find("li").length);
        });
    }
    function isCreateImg(opts, $this) {
        var smallImgList = "",smallImgListW="",
            smallImgBox=$this.find(".ytl_smallImgLists");
        for (var i = 0; i < $this.find("ul>li").length; i++) {
            var smallImgCon = $this.find("ul>li").eq(i).find("img").attr("src");
            smallImgList += "<li style='background-image: url("+smallImgCon+")'></li>";
        }
        $this.find(".ytl_smallImgList").append(smallImgList);
        $this.find(".ytl_smallImgList>li").eq(0).addClass("on");
        $this.find(".ytl_smallImgList>li").outerWidth(smallImgBox.width()/opts.showNum);
        $this.find(".ytl_smallImgList").width($this.find(".ytl_smallImgList>li").length*$this.find(".ytl_smallImgList>li").outerWidth(true));
    }
})(window.jQuery);